package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.26

import (
	"context"
	"fmt"

	"github.com/dopedao/dope-monorepo/packages/api/internal/ent"
	"github.com/dopedao/dope-monorepo/packages/api/internal/graph/generated"
	"github.com/dopedao/dope-monorepo/packages/api/internal/graph/model"
)

// Source is the resolver for the source field.
func (r *listingWhereInputResolver) Source(ctx context.Context, obj *ent.ListingWhereInput, data *model.ListingSource) error {
	panic(fmt.Errorf("not implemented: Source - source"))
}

// SourceNeq is the resolver for the sourceNEQ field.
func (r *listingWhereInputResolver) SourceNeq(ctx context.Context, obj *ent.ListingWhereInput, data *model.ListingSource) error {
	panic(fmt.Errorf("not implemented: SourceNeq - sourceNEQ"))
}

// SourceIn is the resolver for the sourceIn field.
func (r *listingWhereInputResolver) SourceIn(ctx context.Context, obj *ent.ListingWhereInput, data []model.ListingSource) error {
	panic(fmt.Errorf("not implemented: SourceIn - sourceIn"))
}

// SourceNotIn is the resolver for the sourceNotIn field.
func (r *listingWhereInputResolver) SourceNotIn(ctx context.Context, obj *ent.ListingWhereInput, data []model.ListingSource) error {
	panic(fmt.Errorf("not implemented: SourceNotIn - sourceNotIn"))
}

// ListingWhereInput returns generated.ListingWhereInputResolver implementation.
func (r *Resolver) ListingWhereInput() generated.ListingWhereInputResolver {
	return &listingWhereInputResolver{r}
}

type listingWhereInputResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *gameHustlerRelationWhereInputResolver) Text(ctx context.Context, obj *ent.GameHustlerRelationWhereInput, data *int) error {
	panic(fmt.Errorf("not implemented"))
}
func (r *gameHustlerRelationWhereInputResolver) TextNeq(ctx context.Context, obj *ent.GameHustlerRelationWhereInput, data *int) error {
	panic(fmt.Errorf("not implemented"))
}
func (r *gameHustlerRelationWhereInputResolver) TextIn(ctx context.Context, obj *ent.GameHustlerRelationWhereInput, data []int) error {
	panic(fmt.Errorf("not implemented"))
}
func (r *gameHustlerRelationWhereInputResolver) TextNotIn(ctx context.Context, obj *ent.GameHustlerRelationWhereInput, data []int) error {
	panic(fmt.Errorf("not implemented"))
}
func (r *gameHustlerRelationWhereInputResolver) TextGt(ctx context.Context, obj *ent.GameHustlerRelationWhereInput, data *int) error {
	panic(fmt.Errorf("not implemented"))
}
func (r *gameHustlerRelationWhereInputResolver) TextGte(ctx context.Context, obj *ent.GameHustlerRelationWhereInput, data *int) error {
	panic(fmt.Errorf("not implemented"))
}
func (r *gameHustlerRelationWhereInputResolver) TextLt(ctx context.Context, obj *ent.GameHustlerRelationWhereInput, data *int) error {
	panic(fmt.Errorf("not implemented"))
}
func (r *gameHustlerRelationWhereInputResolver) TextLte(ctx context.Context, obj *ent.GameHustlerRelationWhereInput, data *int) error {
	panic(fmt.Errorf("not implemented"))
}
func (r *Resolver) GameHustlerRelationWhereInput() generated.GameHustlerRelationWhereInputResolver {
	return &gameHustlerRelationWhereInputResolver{r}
}

type gameHustlerRelationWhereInputResolver struct{ *Resolver }
