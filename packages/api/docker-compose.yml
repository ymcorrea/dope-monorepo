version: '3.8'
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.hotreload
    depends_on:
      - 'db'
      - 'redis'
    ports:
      - ${WEB_API_PORT}:${WEB_API_PORT}
    networks:
      - dopenet
    volumes:
      - type: bind
        source: ${GOOGLE_APPLICATION_CREDENTIALS}
        target: /build/.config/gcloud/application_default_credentials.json
      - ./web/:/build/web
      - ./cmd/apiServer/:/build/cmd/apiServer
      - ./internal/:/build/internal
    environment:
      # If you don't have this file run 'gcloud auth application default-login'
      GOOGLE_APPLICATION_CREDENTIALS: /build/.config/gcloud/application_default_credentials.json
      PORT: ${WEB_API_PORT}
      PG_HOST: db:5432
    command: CompileDaemon --build="go build ./cmd/apiServer/main.go" --command=./main

  game:
    build:
      context: .
      dockerfile: Dockerfile.hotreload
    depends_on:
      - 'db'
    volumes:
      - type: bind
        source: ${GOOGLE_APPLICATION_CREDENTIALS}
        target: /build/.config/gcloud/application_default_credentials.json
      - ./game/:/build/game/
      - ./cmd/gameServer/:/build/cmd/gameServer/
      - ./internal/:/build/internal
    ports:
      - ${GAME_SERVER_PORT}:${GAME_SERVER_PORT}
    networks:
      - dopenet
    environment:
      FIREBASE_API_KEY: ${FIREBASE_API_KEY}
      GOOGLE_APPLICATION_CREDENTIALS: /build/.config/gcloud/application_default_credentials.json
      PORT: ${GAME_SERVER_PORT}
      PG_HOST: db:5432
    command: CompileDaemon --build="go build ./cmd/gameServer/main.go" --command=./main

  indexer:
    build:
      context: .
      dockerfile: Dockerfile.hotreload
    depends_on:
      - 'db'
    volumes:
      - ./indexer/:/build/indexer/
      - ./cmd/indexerEthereum/:/build/cmd/indexerEthereum/
      - ./internal/:/build/internal
    networks:
      - dopenet
    environment:
      PG_HOST: db:5432
    command: CompileDaemon --build="go build ./cmd/indexerEthereum/main.go" --command=./main

  db:
    image: postgres:14.1-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - dopenet
    volumes:
      - db:/var/lib/postgresql/data

  redis:
    image: redis:7.0.2
    networks:
      - dopenet

volumes:
  db:
    driver: local

networks:
  dopenet: {}
